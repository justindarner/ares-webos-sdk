var path=require("path"),Promise=require("bluebird"),inq=require("inquirer"),log=require("npmlog"),Table=require("easy-table"),fs=Promise.promisifyAll(require("fs-extra")),readJsonSync=require("./util/json").readJsonSync,readJsonAsync=require("./util/json").readJsonAsync,copyToDirAsync=require("./util/copy").copyToDirAsync,merge=require("./util/merge"),Git=require("./util/git"),git=new Git;
function Generator(h){function m(c){if(c){var e=path.join(__dirname,"..");c=fs.readFileSync(c);c=c.toString().replace(/\$cli-root/gi,e).replace(/\\/g,"/");b=JSON.parse(c)}else b=null}var b;m(h);this.setTmplates=m;this.getTemplates=function(){return b}}
Generator.prototype.showTemplates=function(h,m){var b=this.getTemplates(),c=new Table,e={webapp:"Web App",nativeapp:"Native App",webappinfo:"Web App Info",nativeappinfo:"Native App Info",jsservice:"JS Service",nativeservice:"Native Service",jsserviceinfo:"JS Service Info",nativeserviceinfo:"Native Service Info",icon:"Icon",library:"Library"},a;for(a in b)if(!0!==b[a].hide&&b[a].type){var n=b[a]["default"]?"(default) ":"",q=b[a].branch||"-",r=e[b[a].type]||b[a].type;m&&-1===["true","false",!0,!1].indexOf(m)&&
b[a].type&&null===b[a].type.match(new RegExp(m+"$","gi"))||(c.cell("ID",a),c.cell("Project Type",r),c.cell("Version",q),c.cell("Description",n+b[a].description),c.newRow())}console.log(c.print())};
Generator.prototype.generate=function(h){function m(a,f){var d=[].concat(a.path);return Promise.all(d.map(function(a){return fs.lstatAsync(a).then(function(d){if(!d.isFile())throw d="Invalid metadata template path:"+a,log.warn("Geneator.generate()._writeURLdata()#warn","Invalid metadata template path:"+a),Error(d);d=fs.readFileSync(a,"utf8");d=d.replace(/(?:['"])([:/.A-z?<_&s=>0-9;-]+')/,"'"+f+"'");path.basename(a);var c=path.join(l,path.basename(a));fs.writeFileAsync(c,d,{encoding:"utf8"})})})).then(function(a){log.verbose("Geneator.generate()._writeMetadata() done.")})["catch"](function(a){log.verbose("Geneator.generate()._writeMetadata()#err:",
a);throw a;})}function b(a,f,c){log.verbose("Generator.generate()._writeMetadata()");var d=[].concat(a.path);f=f||{};c=c||{};return Promise.all(d.map(function(d){return fs.lstatAsync(d).then(function(b){if(!b.isFile())throw b="Invalid metadata template path:"+d,log.warn("Geneator.generate()._writeMetadata()#warn","Invalid metadata template path:"+d),Error(b);b=readJsonSync(d);var t=path.basename(d);"appinfo.json"===t?b=merge(b,f):"services.json"===t?b=merge(b,c):"package.json"!==t||"jsserviceinfo"!==
a.type&&"nativeserviceinfo"!==a.type||(b.name=c.id||b.name);return b}).then(function(a){var f=path.join(l,path.basename(d));return fs.mkdirsAsync(l).then(function(){return fs.writeFileAsync(f,JSON.stringify(a,null,2),{encoding:"utf8"})})})})).then(function(a){log.verbose("Geneator.generate()._writeMetadata() done.")})["catch"](function(a){log.verbose("Geneator.generate()._writeMetadata()#err:",a);throw a;})}function c(a,f,b,c){var d=[],e;for(e in a.sources)d.push({url:a.sources[e],target:b||a.targets[e],
locate:a.locates?path.join(f,a.locates[e]):path.join(f,"lib")});return Promise.all(d.map(function(a){try{fs.accessSync(a.locate,fs.F_OK);if(!c)throw Error(a.locate+' exits. Please set "overwrite".');log.verbose("_downloadLibs()#Removing an existing directory at ",a.locate);return fs.removeAsync(a.locate).then(function(){return git.shallowClone(a.url,a.locate,a.target)})}catch(u){if(u&&"ENOENT"===u.code)return log.verbose("_downloadLibs()",a.locate+" does not exists. start git shallow clone."),git.shallowClone(a.url,
a.locate,a.target)}})).then(function(f){log.verbose("_downloadLibs() done.");return a})["catch"](function(a){log.verbose("_downloadLibs()#err:",a);throw a;})}var e=h.tmplName,a=h.appinfo,n=h.svcName,q=!!h.overwrite,r=!!h.query,v=h.out,p,k=this.getTemplates(),l=path.resolve(v),g=k[e];if(!g||"requireCommands"===e)return Promise.reject(Error("Invalid template name"));g.metadata&&g.metadata.data&&"object"===typeof g.metadata.data&&(a=merge(a,g.metadata.data));n&&(p={},p.id=n,p.services=[{name:n}]);return Promise.resolve().then(function(){if(k.requireCommands&&
-1!==k.requireCommands.indexOf("git"))return git.verifyGit({openUrl:!0})}).then(function(){try{var a=fs.readdirSync(l);return inq.prompt([{type:"confirm",name:"overwrite",message:"The directory already exists, overwrite?","default":!1,when:function(f){return!q&&r&&0<a.length}}]).then(function(f){h.overwrite=f.overwrite||h.overwrite;if(0<a.length&&!h.overwrite)throw Error(l+" is not empty. Please check the directory.");})}catch(f){if(f&&"ENOTDIR"===f.code)throw Error(l+" is not a directory. Please check the directory path.");
if(f&&"ENOENT"===f.code)log.verbose("Generator.generate()","The directory does not exist.");else throw f;}}).then(function(){log.verbose("Generator.generate()","template name:"+e);console.log("Generating "+e+" in "+l);if(g.type.match(/info$/))return b(g,a,p);if(g.type.match(/^Hosted/)){var d=[].concat(g.path);return Promise.all(d.map(function(a){return copyToDirAsync(a,l)})).then(function(){var f,c;g.metadata&&g.metadata.id&&(f=k[g.metadata.id]);if(f){if(a.url){c=a.url;delete a.url;var e={path:path.join(d[0],
"index.html")};m(e,c)}return b(f,a,p)}})}d=[].concat(g.path);return Promise.all(d.map(function(a){log.verbose("Generator.generate()","template src:"+a);return copyToDirAsync(a,l)})).then(function(){var d;g.metadata&&g.metadata.id&&(d=k[g.metadata.id]);if(d)return b(d,a,p)})}).then(function(){return Promise.all((k[e].deps||[]).map(function(a){if(k[a]){if(k[a].path)return copyToDirAsync(k[a].path,l);log.warn("Generator.generate()","Invalid template path "+a)}else log.warn("Generator.generate()","Invalid template id "+
a)}))}).then(function(){if(!g.type.match(/info$/)&&!g.type.match(/icon$/)){log.verbose("Generator.generate()","target branch is "+k[e].branch);var a;a=path.join(l,".enyoconfig");try{return fs.accessSync(a,fs.F_OK),readJsonAsync(a).then(function(a){return c(a,l,k[e].branch,h.overwrite)}).then(function(b){if(b&&b.targets){for(var c in b.targets)b.targets[c]!==k[e].branch&&(b.targets[c]=k[e].branch);return fs.writeFileAsync(a,JSON.stringify(b,null,2))}})}catch(f){if(f&&"ENOENT"===f.code)log.verbose("Generator.generate()",
a+" does not exist.");else throw f;}}}).then(function(){log.verbose("Generator.generate() done.");return{msg:"Success"}})["catch"](function(a){log.verbose("Generator.generate()#err:",a);throw a;})};
Generator.prototype.init=function(h){function m(a,b){var c=[];log.verbose("Generator.init()._checkoutLibs()");for(var e in a.sources)c.push({url:a.sources[e],target:a.targets[e],locate:a.locates?path.join(b,a.locates[e]):path.join(b,"lib")});return Promise.all(c.map(function(a){try{return fs.accessSync(a.locate),git.unshallowRepo(a.locate).then(function(){return git.checkoutRepo(a.locate,a.target)})}catch(p){if(p&&"ENOENT"===p.code)return log.verbose("Generator.init()._checkoutLibs()",a.locate+" does not exist."),
log.verbose("Generator.init()._checkoutLibs()","git shallow clone "+a.url+" # branch: "+a.target),git.shallowClone(a.url,a.locate,a.target);throw p;}})).then(function(a){log.verbose("Generator.init()._checkoutLibs() done.")})["catch"](function(a){log.verbose("Generator.init()._checkoutLibs()#err:",a);throw a;})}var b,c=path.resolve(h.out),e=path.join(c,".enyoconfig");log.verbose("Generator.init()","options:"+h);try{if(b=fs.statSync(c),!b.isDirectory())throw Error(c+" is not a directory.");}catch(a){if(a&&
"ENOENT"===a.code)throw Error(c+" does not exist.");}return Promise.resolve().then(function(){return git.verifyGit({openUrl:!0})}).then(function(){try{var a;fs.accessSync(e,fs.F_OK);a=readJsonSync(e);console.log("Initializing as described in "+e);return m(a,c)}catch(n){throw n&&"ENOENT"===n.code&&(n=Error(e+" does not exist.")),n;}}).then(function(){log.verbose("Generator.init() done");return{msg:"Success"}})["catch"](function(a){log.verbose("Generator.init() err:",a);throw a;})};module.exports=Generator;
